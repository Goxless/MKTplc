version: '3.8'

services:
    postgres:
        image: postgres:latest
        container_name: 'postgres'
        environment:
            POSTGRES_DB: ${PG_DB_NAME}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_PASSWORD: ${PG_PASSWORD}
            PGDATA: '/var/lib/postgresql/data/pgdata'
        ports:
            - 5432:5432
        volumes:
            - './persistence/postgres:/var/lib/postgresql/data'
        # healthcheck:
        #   test: ["CMD-SHELL", "pg_isready -U root -d psqlDev"]
        #   interval: 10s
        #   timeout: 5s
        #   retries: 5
        #   start_period: 10s
        # restart: always
        networks:
            - BackNet

    redis:
        image: redis:latest
        container_name: 'redis'
        ports:
            - 6379:6379
        volumes:
            - './persistence/redis:/data'
        # restart: always
        # healthcheck:
        #   test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
        #   interval: 1s
        #   timeout: 5s
        #   retries: 5
        networks:
            - BackNet

    node-app:
        build: .
        container_name: 'node-app'
        ports:
            - ${APP_PORT}:8000
        volumes:
            - './persistence/nodeApp/static/:/usr/src/app/static/'
            - './persistence/nodeApp/static/music/track:/usr/src/app/static/music/track'
            - './persistence/nodeApp/static/music/album/images:/usr/src/app/static/music/album/images'
            - './persistence/nodeApp/static/profile/avatar:/usr/src/app/static/profile/avatar'

        environment:
            - PG_DATABASE_URL = postgres
            - REDIS_URL =  redis
        depends_on:
            - redis
            - postgres
        networks:
            - BackNet

networks:
    BackNet:
        name: BackNet
        driver: bridge
